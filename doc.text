some text


















1 
Experiment no: 01) User Stories 1] 
as a user 
I want to login the app 
so that i am registered 
given: a person. 
when: i click on the login button. 
then: my account should be created. 
2] 
as a registered user 
i want to place an order by clicking order button so that i am able to order the product. 
given: a registered user. 
when: i click on the order button. 
then: i should be able to order the product. 
3] 
as a user 
i want see product details clicking on the product so that i am able to see. 
given: a registered user. 
when: i click on the product. 
then: i should be able to see the product details.
2 
4] 
as a user 
i want to search the product 
so that i can get to see the product i want. 
given: a registered user. 
when: i click on the search button. 
then: i should be able to search for the product. 
5] 
as a user 
i want to cancel my order on clicking cancel order so that i can get money back. 
given: a registered user. 
when: i click on the cancel button. 
then: i should be able to cancel the order. 
6] 
as a user 
i want to be able to replaces the product so that i get good quality product 
given: a registered user. 
when: i click on the cart button. 
then: i should be able to see my cart items.
3 
7] 
as a user 
i want to see people reviews about the product 
so that i can check other users feedback about the product 
given: a registered user. 
when: i click on the reviews. 
then: i should be able to see the reviews. 
8] 
as a delivery agent. 
i want to see delivery details. 
so that i can deliver product quickly. 
given: a registered delivery agent 
when: i click on the delivery address details. 
then: i should be able to see my cart items. 
9] 
as a user. 
i want online as well as offline payment methods. 
so that i can pay in any mode. 
given: a registered user. 
when: i click on pay button. 
then: i should be able to pay with offline as well as online method.
4 
10]user story. 
as a user. 
i want to be able to create my cart list. so that i can order product when i want. 
given: a registered user. 
when: i click on the cart button. then: i should be able to see my cart items. 
11] 
as a user 
i want to update my profile 
so that i can change my details 
given: a registered user 
when: i click on update profile button then: i should be able to my details.
5 
Experiment no: 02) Creating Scrum Board Using Trello  
6 
  
7
Experiment no: 03) Drawing Burndown Chart 
Step 1: Create a table on excel. 
Step 2: Fill the data. 
Step 3: Use the formula and find total hours, Actual number of hours remaining  and estimate number hours remaining. 
Step 4: Select actual number of hours remaining and estimate number hours  remaining and make a burndown chart.
  
8 
Experiment no: 04) Git Commands 
1. git → to check if the git package is present on the system or not 2. git --version →To check version 
3. sudo apt update → to update the system 
4. sudo apt install git → to install git package 
4.1. Broken Installation: 
4.1.1. sudo apt --fix-broken install 
4.1.2. sudo apt install git 
4.2. Successful installation 
5. git --version 
6. Initialize the settings locally (configuring username and email) 6.1. git config --global user.name “SuryakantParyekar” 
6.2. git config --global user.email “suryakantparyekar33@gmail.com” 6.3. git config --list → to see global config 
7. Integrate local environment with GitHub 
8. Login to your GitHub account 
9. Create a repository 
10. In Ubuntu create a directory (named workspace) 
11. Execute the git clone command 
11.1. git clone …link of the repository… 
12. Navigate to the repository locally in Ubuntu 
12.1. cd repositoryname 
13. Create a Python code file 
13.1. touch first.py 
14. git status → shows the untracked file first.py
9 
15. git add first.py → If 2 files git add 1.txt 2.txt → adds files to the staging  area and the file would be committed together to the remote repository 
16. git status → shows the files added to the staging area 
17. Commit 
17.1. git commit -m “Python program committed” → used when more  than 1 file is added to the staging area and then commits them  altogether 
17.2. git commit first.py -m “first.py committed” → In case only one file I s to be committed 
18. Push Local changes to the remote repository 
18.1. git push origin master main 
18.2. Generate token 
18.3. git remote set-url origin  
https://…generated_token…@github.com/username/repositoryname 18.4. Git push origin main
10 
Experiment no: 05) Git branching 
1. git branch branch-name →creates the branch 
2. git branch -a → to list the branches 
3. git checkout branch-name →to check out from the created branch and to  go to the main branch 
4. git status 
5. git merge branch-name →to merge main and target branch 6. git branch -d branch-name →to delete the obsolete branch after merging
11 
Experiment no: 06) Refactoring 1:Rename 
Select variable/class name/method name Right click->refactor->rename. 
2:Extract Method 
Select relevant code 
Right click->refactor->extract method. 
3:Inline 
Select relevant code 
Right click->refactor->inline. 
4:Extract Local Variable 
Select relevant code 
Right click->refactor->extract local variable. 
5:Extract Constants 
Select relevant code 
Right click->refactor->extract constants 
6:Change method signature 
Select method name 
Right click->refactor->change method signature->add 7: Move method-
12 
Select the entire method 
Right click->refractor->move->click on browse->choose the new class->ok 
8: Extract Superclass 
Create 2 classes: circle and rectangle. 
Circle with data members color and radius 
Rectangle with data members length, breadth and color 
Right click->refractor->extractSuperClass->click on Add (choose appropriate class)->Click on add and select parameters->ok.
13 
Experiment no: 07) Junit testing 
Procedure:  
Step1: Click on file menu and select project  
Step2: Right click on project and create class (e.g., circle)  
Step3: Declare a data member (e.g., float radius)  
Step4: Right click on class i.e., circle ->go to source->click on generate getters  and setters 
Step5: Create a function i.e., area (implement the function)  
Circle Class: 
package junit; 
public class Circle { 
public float radius; 
public float getRadius() { 
return radius; 
} 
public void setRadius(float radius) { this.radius = radius; 
} 
public float area() { 
return (float)(3.14 * this.radius * this.radius); 
} 
} 
Step6: Right click on package ->click new->click on Junit  
Step7: Write the class name for Junit testcase and browse the class i.e., circle Step8. Click next button right down the window  
Step9. Select all the methods on which you want write the testcase i.e.  setradius() and area()  
Step10: Create instance of class which function are to be tested
14 
Circle Testcase class: 
package junit; 
import org.junit.jupiter.api.Test; 
import junit.framework.TestCase; 
class CircleTestCase extends TestCase{ 
@Test 
void testSetRadius() { 
Circle circle = new Circle(); 
circle.setRadius(2.0f); 
assertEquals(12.56f,circle.area()); 
} 
} 
Step 11: Run testcase class i.e. Right click on testcase class and click on Run as - >Junit 
  

To run one or more testcases together we create suite: 
Right click on package-> new-> other-> Java-> Junit-> Junit Suite Browse the 
15 
package name in which classes are created Select all the testcase classes need  to be run -> Click Finish 
  
To execute: Right Click on suite class (All Test) -> Run it as Junit
16 
Experiment no: 08) Selenium automated testing 
Selenium Code: 
package ubg; 
import org.openqa.selenium.By; 
import org.openqa.selenium.WebDriver; 
import org.openqa.selenium.chrome.ChromeDriver; 
import org.openqa.selenium.chrome.ChromeOptions; 
public class surya_s , 
public static void main(String*+ args) throws InterruptedException , // TODO Auto-generated method stub 
System.setProperty("webdriver.chrome.driver", 
"C:\\Users\\Umesh\\Downloads\\chromedriver 
win64\\chromedriver.exe"); 
ChromeOptions cop=new ChromeOptions(); 
WebDriver dr=new ChromeDriver(cop); 
dr.get("https://accounts.spotify.com/en/login?gad=1&gclid=CjwKCAjwj OunBhB4EiwA94JWsF 
LoRaCxHeBfwGi5LYUrosCkCMfDDd5yS7_e9VqwDHQKBo6UtpkfBoC 9kQAvD_BwE&gclsrc=aw.ds"); 
dr.manage().window().maximize();
17 
dr.findElement(By.id("login 
username")).sendKeys("suryakantparyekar33@gmail.com"); 
dr.findElement(By.id("login 
password")).sendKeys("***********"); 
dr.findElement(By.id("login-button")).click(); 
-  
- 
After Running:
  
18 
Experiment no: 09) Debugging 
Step 1: insert toggle breakpoints on the code form where you are getting error  or want to debugging. 
Step 2: click debug button. 
  
Navigation for debug: 
∙ F5: is used to jump into function 
∙ F6: is used to jump next line 
∙ F7: is used to jump out of the function 
∙ F8: is used to jump to next toggle breakpoint
19 
Experiment no: 10) Generating java doc 
Step 1: Select your project and click on project on menu bar and select  Generate  
Step 2: Click on project name and give destination path for saving javadoc and  click finish
  
20
